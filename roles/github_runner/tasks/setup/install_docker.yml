---
- name: Update package lists
  ansible.builtin.apt:
    update_cache: true

- name: Install prerequisites for Docker
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
    state: present

- name: Create directory for Docker GPG key
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Download Docker GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: "0644"

- name: Add Docker repository if not already present
  ansible.builtin.shell: |
    if ! grep -q "download.docker.com" /etc/apt/sources.list.d/docker.list; then
      ARCH=$(dpkg --print-architecture)
      VERSION_CODENAME=$(. /etc/os-release && echo "$VERSION_CODENAME")
      echo "deb [arch=${ARCH} signed-by=/etc/apt/keyrings/docker.asc] \
        https://download.docker.com/linux/ubuntu ${VERSION_CODENAME} stable" \
        > /etc/apt/sources.list.d/docker.list
      echo "changed"
    else
      echo "unchanged"
    fi
  args:
    executable: /bin/bash
  register: docker_repo_result
  changed_when: docker_repo_result.stdout == "changed"

- name: Update package lists after adding Docker repo
  ansible.builtin.apt:
    update_cache: true

- name: Install Docker CE
  ansible.builtin.apt:
    name: docker-ce
    state: present

- name: Check if the current user is in the Docker group
  ansible.builtin.command:
    cmd: id -nG "{{ ansible_user }}"
  register: user_groups
  failed_when: false

- name: Add current user to the Docker group
  ansible.builtin.command:
    cmd: usermod -aG docker "{{ ansible_user }}"
  when: "'docker' not in user_groups.stdout.split()"
  changed_when: true

